CREATE TABLE if not exists usuario
(
  id serial NOT NULL,
  nome character varying(100) NOT NULL,
  email character varying(100) NOT NULL,
  senha character varying(100),
  permitir_cad_usuario boolean NOT NULL,
  CONSTRAINT pk_usuario PRIMARY KEY (id)
);

CREATE TABLE if not exists lote
(
  id serial NOT NULL,
  data_hora timestamp,
  CONSTRAINT pk_lote PRIMARY KEY (id)
);

create table if not exists almoxarifado (
  id serial,
  nome character varying(100) not null,
  codigo_e10 int not null,
  primary key (id)
);

create table if not exists produto (
  id serial,
  sku character varying(100) not null,
  codigo_barras int null,
  nome character varying(255) null,
  custo numeric(18,2) null,
  saldo numeric(18,2) null,
  disponivel numeric(18,2) null,
  icms numeric(18,2) null,
  cf character varying(100) null,
  produto_pai character varying(100) null,
  marca character varying(100) null,
  familia character varying(100) null,
  classe character varying(100) null,
  unidade_medida character varying(100) null,
  grupo character varying(100) null,
  sub_grupo character varying(100) null,
  preco_venda numeric(18,2) null,
  promocao_ipi numeric(18,2) null,
  peso numeric(18,2) null,
  ncm character varying(10) null,
  estoque_maximo int null,
  prazo_entrega int null,
  quantidade_embalagem int null,
  c numeric(18,2) null,
  l numeric(18,2) null,
  e numeric(18,2) null,
  dias_garantia int null,
  origem_mercadoria character varying(255) null,
  primary key (id)
);

create table if not exists fornecedor (
  id serial,
  nome varchar(100) not null,
  cnpj varchar(14) not null,
  id_almoxarifado int not null,
  primary key (id),
  constraint fk_fornecedor_almoxarifado 
  foreign key (id_almoxarifado)
  references almoxarifado (id)
  on delete restrict
  on update cascade);

create table if not exists produtofornecedor (
  id serial,
  cod_prod_fornecedor varchar(100) not null,
  id_produto int not null,
  id_fornecedor int not null,
  primary key (id),
  constraint fk_produtofornecedor_produto1
    foreign key (id_produto)
    references produto (id)
    on delete no action
    on update no action,
  constraint fk_produtofornecedor_fornecedor1
    foreign key (id_fornecedor)
    references fornecedor (id)
    on delete no action
    on update no action);

create table if not exists importacao (
  id serial,
  data_hora timestamp,
  id_usuario int not null,
  id_fornecedor int not null,
  id_lote int not null,
  primary key (id),
  constraint fk_importacao_usuario1
    foreign key (id_usuario)
    references usuario (id)
    on delete no action
    on update no action,
  constraint fk_importacao_fornecedor1
    foreign key (id_fornecedor)
    references fornecedor (id)
    on delete no action
    on update no action,
  constraint fk_importacao_lote1
    foreign key (id_lote)
    references lote (id)
    on delete no action
    on update no action);

create table if not exists importacao_itens (
  id serial,
  custo decimal(18,2) not null,
  quantidade int not null,
  id_importacao int not null,
  id_produto int not null,
  status smallint not null,
  custo_dia_e10 decimal(18,2) not null,
  primary key (id),
  constraint fk_importacao_itens_importacao1
    foreign key (id_importacao)
    references importacao (id)
    on delete cascade
    on update cascade,
  constraint fk_importacao_itens_produto1
    foreign key (id_produto)
    references produto (id)
    on delete no action
    on update no action);

CREATE TABLE if not exists match
( 
  id serial NOT NULL,
  id_lote integer,  
  data_hora time with time zone,  
  id_usuario integer,  
CONSTRAINT pk_match_id PRIMARY KEY (id),  
CONSTRAINT fk_match_lote1 FOREIGN KEY (id_lote)      
REFERENCES lote (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
CONSTRAINT fk_match_usuario1 FOREIGN KEY (id_usuario)      
REFERENCES usuario (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE if not exists match_itens
(
  id serial NOT NULL,
  id_match integer,
  id_produto integer,
  custoanterior numeric(18,2),
  custonovo numeric(18,2),
  id_fornecedoranterior integer,
  id_fornecedornovo integer,
  id_ultimolote integer,
  atualizado boolean,
  importado boolean,
  CONSTRAINT pk_matchitens_id PRIMARY KEY (id),
  CONSTRAINT fk_matchitens_fornecedor1 FOREIGN KEY (id_fornecedoranterior)
      REFERENCES fornecedor (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_matchitens_fornecedor2 FOREIGN KEY (id_fornecedornovo)
      REFERENCES fornecedor (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_matchitens_lote1 FOREIGN KEY (id_ultimolote)
      
      REFERENCES lote (id) MATCH SIMPLE
      
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_matchitens_match1 FOREIGN KEY (id_match)
      REFERENCES match (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_matchitens_produto1 FOREIGN KEY (id_produto)
      REFERENCES produto (id) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
);